IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0
		},
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: true,
     paused: false,
     emitClose: true,
     autoDestroy: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null
	},
  readable: true,
  _events: [Object: null prototype
	] { end: [Function: responseOnEnd
		]
	},
  _eventsCount: 1,
  _maxListeners: undefined,
  socket:
   Socket {
     connecting: false,
   r false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead
			],
        onconnection: null,
			[Symbol(owner)
			]: [Circular
			]
		},
     _parent: null,
     _host: 'www.google.com',
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0
			},
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
		},
     readable: true,
     _events: [Object: null prototype
		] {
        end: [Array
			],
        free: [Function: onFree
			],
        close: [Array
			],
        agentRemove: [Function: onRemove
			],
        drain: [Function: ondrain
			],
        error: [Function: socketErrorListener
			],
        data: [Function: socketOnData
			]
		},
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite
			],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object
			]
		},
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders
			],
        '1': [Function: parserOnHeadersComplete
			],
        '2': [Function: parserOnBody
			],
        '3': [Function: parserOnMessageComplete
			],
        '4': null,
        _headers: [],
        _url: '',
        socket: [Circular
			],
        incoming: [Circular
			],
        outgoing: [ClientRequest
			],
        maxHeaderPairs: 2000,
        _consumed: false,
        onIncoming: [Function: parserOnIncomingClient
			],
			[Symbol(isReused)
			]: false
		},
     _httpMessage:
      ClientRequest {
        _events: [Object
			],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Circular
			],
        connection: [Circular
			],
        _header:
         'GET / HTTP/1.1\r\nHost: www.google.com\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput
			],
        agent: [Agent
			],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/',
        _ended: false,
        res: [Circular
			],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: [HTTPParser
			],
        maxHeadersCount: null,
			[Symbol(isCorked)
			]: false,
			[Symbol(outHeadersKey)
			]: [Object
			]
		},
		[Symbol(asyncId)
		]: 5,
		[Symbol(lastWriteQueueSize)
		]: 0,
		[Symbol(timeout)
		]: null,
		[Symbol(kBytesRead)
		]: 0,
		[Symbol(kBytesWritten)
		]: 0
	},
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead
			],
        onconnection: null,
			[Symbol(owner)
			]: [Circular
			]
		},
     _parent: null,
     _host: 'www.google.com',
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0
			},
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
		},
     readable: true,
     _events: [Object: null prototype
		] {
        end: [Array
			],
        free: [Function: onFree
			],
        close: [Array
			],
        agentRemove: [Function: onRemove
			],
        drain: [Function: ondrain
			],
        error: [Function: socketErrorListener
			],
        data: [Function: socketOnData
			]
		},
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite
			],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object
			]
		},
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders
			],
        '1': [Function: parserOnHeadersComplete
			],
        '2': [Function: parserOnBody
			],
        '3': [Function: parserOnMessageComplete
			],
        '4': null,
        _headers: [],
        _url: '',
        socket: [Circular
			],
        incoming: [Circular
			],
        outgoing: [ClientRequest
			],
        maxHeaderPairs: 2000,
        _consumed: false,
        onIncoming: [Function: parserOnIncomingClient
			],
			[Symbol(isReused)
			]: false
		},
     _httpMessage:
      ClientRequest {
        _events: [Object
			],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Circular
			],
        connection: [Circular
			],
        _header:
         'GET / HTTP/1.1\r\nHost: www.google.com\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput
			],
        agent: [Agent
			],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/',
        _ended: false,
        res: [Circular
			],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: [HTTPParser
			],
        maxHeadersCount: null,
			[Symbol(isCorked)
			]: false,
			[Symbol(outHeadersKey)
			]: [Object
			]
		},
		[Symbol(asyncId)
		]: 5,
		[Symbol(lastWriteQueueSize)
		]: 0,
		[Symbol(timeout)
		]: null,
		[Symbol(kBytesRead)
		]: 0,
		[Symbol(kBytesWritten)
		]: 0
	},
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: { date: 'Thu,
		31 Oct 2019 18: 48: 44 GMT',
     expires: '-1',
     'cache-control': 'private, max-age=0',
     p3p:
      'CP="This is not a P3P policy! See g.co/p3phelp for more info."',
     server: 'gws',
     'x-xss-protection': '0',
     'x-frame-options': 'SAMEORIGIN',
     'set-cookie': [ '1P_JAR=2019-10-31-18; expires=Sat,
			30-Nov-2019 18: 48: 44 GMT; path=/; domain=.google.com; SameSite=none',
        'NID=190=j_MDMo13tZhgbsm9O-Jqh4064hvROpmBMoVxznr7hEM9_sb7y3ILMHWbyhAumf3PjO9rkTsxCFkYIRmqE9UvOqXzEf91NmnkgGdiOd1nrML_trx4rcGNRjpZ5w_-Cwwi9nuIxdHCSs77f15lcbwI57PtLrsc-ayPL4dXGOhGNBc; expires=Fri,
			01-May-2020 18: 48: 44 GMT; path=/; domain=.google.com; HttpOnly'
		],
     'accept-ranges': 'none',
     vary: 'Accept-Encoding',
     'transfer-encoding': 'chunked',
     'content-type': 'text/html; charset=ISO-8859-1',
     via: '1.1 TPGTSWSA02.underarmour.com: 80 (Cisco-WSA/10.5.3-025)',
     connection: 'close'
	},
  rawHeaders: [ 'Date',
     'Thu,
		31 Oct 2019 18: 48: 44 GMT',
     'Expires',
     '-1',
     'Cache-Control',
     'private, max-age=0',
     'P3P',
     'CP="This is not a P3P policy! See g.co/p3phelp for more info."',
     'Server',
     'gws',
     'X-XSS-Protection',
     '0',
     'X-Frame-Options',
     'SAMEORIGIN',
     'Set-Cookie',
     '1P_JAR=2019-10-31-18; expires=Sat,
		30-Nov-2019 18: 48: 44 GMT; path=/; domain=.google.com; SameSite=none',
     'Set-Cookie',
     'NID=190=j_MDMo13tZhgbsm9O-Jqh4064hvROpmBMoVxznr7hEM9_sb7y3ILMHWbyhAumf3PjO9rkTsxCFkYIRmqE9UvOqXzEf91NmnkgGdiOd1nrML_trx4rcGNRjpZ5w_-Cwwi9nuIxdHCSs77f15lcbwI57PtLrsc-ayPL4dXGOhGNBc; expires=Fri,
		01-May-2020 18: 48: 44 GMT; path=/; domain=.google.com; HttpOnly',
     'Accept-Ranges',
     'none',
     'Vary',
     'Accept-Encoding',
     'Transfer-Encoding',
     'chunked',
     'Content-Type',
     'text/html; charset=ISO-8859-1',
     'Via',
     '1.1 TPGTSWSA02.underarmour.com: 80 (Cisco-WSA/10.5.3-025)',
     'Connection',
     'close'
	],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 200,
  statusMessage: 'OK',
  client:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        onread: [Function: onStreamRead
			],
        onconnection: null,
			[Symbol(owner)
			]: [Circular
			]
		},
     _parent: null,
     _host: 'www.google.com',
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0
			},
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
		},
     readable: true,
     _events: [Object: null prototype
		] {
        end: [Array
			],
        free: [Function: onFree
			],
        close: [Array
			],
        agentRemove: [Function: onRemove
			],
        drain: [Function: ondrain
			],
        error: [Function: socketErrorListener
			],
        data: [Function: socketOnData
			]
		},
     _eventsCount: 7,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite
			],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object
			]
		},
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: null,
     _server: null,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders
			],
        '1': [Function: parserOnHeadersComplete
			],
        '2': [Function: parserOnBody
			],
        '3': [Function: parserOnMessageComplete
			],
        '4': null,
        _headers: [],
        _url: '',
        socket: [Circular
			],
        incoming: [Circular
			],
        outgoing: [ClientRequest
			],
        maxHeaderPairs: 2000,
        _consumed: false,
        onIncoming: [Function: parserOnIncomingClient
			],
			[Symbol(isReused)
			]: false
		},
     _httpMessage:
      ClientRequest {
        _events: [Object
			],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Circular
			],
        connection: [Circular
			],
        _header:
         'GET / HTTP/1.1\r\nHost: www.google.com\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput
			],
        agent: [Agent
			],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/',
        _ended: false,
        res: [Circular
			],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: [HTTPParser
			],
        maxHeadersCount: null,
			[Symbol(isCorked)
			]: false,
			[Symbol(outHeadersKey)
			]: [Object
			]
		},
		[Symbol(asyncId)
		]: 5,
		[Symbol(lastWriteQueueSize)
		]: 0,
		[Symbol(timeout)
		]: null,
		[Symbol(kBytesRead)
		]: 0,
		[Symbol(kBytesWritten)
		]: 0
	},
  _consuming: false,
  _dumped: false,
  req:
   ClientRequest {
     _events: [Object: null prototype
		] { prefinish: [Function: requestOnPrefinish
			]
		},
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 0,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP
			],
        _parent: null,
        _host: 'www.google.com',
        _readableState: [ReadableState
			],
        readable: true,
        _events: [Object
			],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState
			],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: [HTTPParser
			],
        _httpMessage: [Circular
			],
			[Symbol(asyncId)
			]: 5,
			[Symbol(lastWriteQueueSize)
			]: 0,
			[Symbol(timeout)
			]: null,
			[Symbol(kBytesRead)
			]: 0,
			[Symbol(kBytesWritten)
			]: 0
		},
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP
			],
        _parent: null,
        _host: 'www.google.com',
        _readableState: [ReadableState
			],
        readable: true,
        _events: [Object
			],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState
			],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: [HTTPParser
			],
        _httpMessage: [Circular
			],
			[Symbol(asyncId)
			]: 5,
			[Symbol(lastWriteQueueSize)
			]: 0,
			[Symbol(timeout)
			]: null,
			[Symbol(kBytesRead)
			]: 0,
			[Symbol(kBytesWritten)
			]: 0
		},
     _header:
      'GET / HTTP/1.1\r\nHost: www.google.com\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput
		],
     agent:
      Agent {
        _events: [Object
			],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object
			],
        requests: {},
        sockets: [Object
			],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256
		},
     socketPath: undefined,
     timeout: undefined,
     method: 'GET',
     path: '/',
     _ended: false,
     res: [Circular
		],
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders
			],
        '1': [Function: parserOnHeadersComplete
			],
        '2': [Function: parserOnBody
			],
        '3': [Function: parserOnMessageComplete
			],
        '4': null,
        _headers: [],
        _url: '',
        socket: [Socket
			],
        incoming: [Circular
			],
        outgoing: [Circular
			],
        maxHeaderPairs: 2000,
        _consumed: false,
        onIncoming: [Function: parserOnIncomingClient
			],
			[Symbol(isReused)
			]: false
		},
     maxHeadersCount: null,
		[Symbol(isCorked)
		]: false,
		[Symbol(outHeadersKey)
		]: [Object: null prototype
		] { host: [Array
			]
		}
	}
}
creatureboy: completed (learnyounode)$ node http-client.js www.google.com
undefined
creatureboy: completed (learnyounode)$ node http-client.js www.google.com
[Object: null prototype
] { end: [Function: responseOnEnd
	]
}
creatureboy: completed (learnyounode)$
